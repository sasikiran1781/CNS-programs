#include <stdio.h>
#include <string.h>
#include <ctype.h>

void encrypt(char plaintext[], char key[]);
void decrypt(char ciphertext[], char key[]);

int main() {
    char text[1000];
    char key[27] = "QWERTYUIOPASDFGHJKLZXCVBNM";
    char choice;

    printf("Enter the text: ");
    fgets(text, sizeof(text), stdin);
    text[strcspn(text, "\n")] = '\0';

    printf("Encrypt or Decrypt (E/D): ");
    scanf(" %c", &choice);

    if (toupper(choice) == 'E') {
        encrypt(text, key);
    } else if (toupper(choice) == 'D') {
        decrypt(text, key);
    } else {
        printf("Invalid choice.\n");
    }

    return 0;
}

void encrypt(char plaintext[], char key[]) {
    for (int i = 0; plaintext[i] != '\0'; i++) {
        if (isalpha(plaintext[i])) {
            char base = isupper(plaintext[i]) ? 'A' : 'a';
            int pos = toupper(plaintext[i]) - 'A';
            plaintext[i] = key[pos] + (islower(plaintext[i]) ? 32 : 0);
        }
    }
    printf("Encrypted text: %s\n", plaintext);
}

void decrypt(char ciphertext[], char key[]) {
    for (int i = 0; ciphertext[i] != '\0'; i++) {
        if (isalpha(ciphertext[i])) {
            char upperChar = toupper(ciphertext[i]);
            for (int j = 0; j < 26; j++) {
                if (upperChar == key[j]) {
                    ciphertext[i] = (islower(ciphertext[i]) ? 'a' : 'A') + j;
                    break;
                }
            }
        }
    }
    printf("Decrypted text: %s\n", ciphertext);
}
